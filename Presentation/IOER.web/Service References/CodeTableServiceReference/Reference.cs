//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ILPathways.CodeTableServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseRequest", Namespace="http://schemas.datacontract.org/2004/07/IllinoisPathways.DataContracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ILPathways.CodeTableServiceReference.CodeSearchRequest))]
    public partial class BaseRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CodeSearchRequest", Namespace="http://schemas.datacontract.org/2004/07/IllinoisPathways.DataContracts")]
    [System.SerializableAttribute()]
    public partial class CodeSearchRequest : ILPathways.CodeTableServiceReference.BaseRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdColumnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TableNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleColumnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseWarehouseTotalTitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filter {
            get {
                return this.FilterField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterField, value) != true)) {
                    this.FilterField = value;
                    this.RaisePropertyChanged("Filter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdColumn {
            get {
                return this.IdColumnField;
            }
            set {
                if ((object.ReferenceEquals(this.IdColumnField, value) != true)) {
                    this.IdColumnField = value;
                    this.RaisePropertyChanged("IdColumn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderBy {
            get {
                return this.OrderByField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderByField, value) != true)) {
                    this.OrderByField = value;
                    this.RaisePropertyChanged("OrderBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TableName {
            get {
                return this.TableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TableNameField, value) != true)) {
                    this.TableNameField = value;
                    this.RaisePropertyChanged("TableName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TitleColumn {
            get {
                return this.TitleColumnField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleColumnField, value) != true)) {
                    this.TitleColumnField = value;
                    this.RaisePropertyChanged("TitleColumn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseWarehouseTotalTitle {
            get {
                return this.UseWarehouseTotalTitleField;
            }
            set {
                if ((this.UseWarehouseTotalTitleField.Equals(value) != true)) {
                    this.UseWarehouseTotalTitleField = value;
                    this.RaisePropertyChanged("UseWarehouseTotalTitle");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseResponse", Namespace="http://schemas.datacontract.org/2004/07/IllinoisPathways.DataContracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ILPathways.CodeTableServiceReference.CodeSearchResponse))]
    public partial class BaseResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ILPathways.CodeTableServiceReference.ErrorDataContract ErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ILPathways.CodeTableServiceReference.ErrorDataContract[] MessageListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ILPathways.CodeTableServiceReference.StatusEnumDataContract StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ILPathways.CodeTableServiceReference.ErrorDataContract Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ILPathways.CodeTableServiceReference.ErrorDataContract[] MessageList {
            get {
                return this.MessageListField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageListField, value) != true)) {
                    this.MessageListField = value;
                    this.RaisePropertyChanged("MessageList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ILPathways.CodeTableServiceReference.StatusEnumDataContract Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ErrorDataContract", Namespace="http://schemas.datacontract.org/2004/07/IllinoisPathways.DataContracts")]
    [System.SerializableAttribute()]
    public partial class ErrorDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageId {
            get {
                return this.MessageIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageIdField, value) != true)) {
                    this.MessageIdField = value;
                    this.RaisePropertyChanged("MessageId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CodeSearchResponse", Namespace="http://schemas.datacontract.org/2004/07/IllinoisPathways.DataContracts")]
    [System.SerializableAttribute()]
    public partial class CodeSearchResponse : ILPathways.CodeTableServiceReference.BaseResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResultCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ILPathways.CodeTableServiceReference.CodesDataContract[] ResultListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TableNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRowsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResultCount {
            get {
                return this.ResultCountField;
            }
            set {
                if ((this.ResultCountField.Equals(value) != true)) {
                    this.ResultCountField = value;
                    this.RaisePropertyChanged("ResultCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ILPathways.CodeTableServiceReference.CodesDataContract[] ResultList {
            get {
                return this.ResultListField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultListField, value) != true)) {
                    this.ResultListField = value;
                    this.RaisePropertyChanged("ResultList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TableName {
            get {
                return this.TableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TableNameField, value) != true)) {
                    this.TableNameField = value;
                    this.RaisePropertyChanged("TableName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRows {
            get {
                return this.TotalRowsField;
            }
            set {
                if ((this.TotalRowsField.Equals(value) != true)) {
                    this.TotalRowsField = value;
                    this.RaisePropertyChanged("TotalRows");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatusEnumDataContract", Namespace="http://schemas.datacontract.org/2004/07/IllinoisPathways.DataContracts")]
    public enum StatusEnumDataContract : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failure = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CodesDataContract", Namespace="http://schemas.datacontract.org/2004/07/IllinoisPathways.DataContracts")]
    [System.SerializableAttribute()]
    public partial class CodesDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormattedTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TableNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WarehouseTotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormattedTitle {
            get {
                return this.FormattedTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.FormattedTitleField, value) != true)) {
                    this.FormattedTitleField = value;
                    this.RaisePropertyChanged("FormattedTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TableName {
            get {
                return this.TableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TableNameField, value) != true)) {
                    this.TableNameField = value;
                    this.RaisePropertyChanged("TableName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WarehouseTotal {
            get {
                return this.WarehouseTotalField;
            }
            set {
                if ((this.WarehouseTotalField.Equals(value) != true)) {
                    this.WarehouseTotalField = value;
                    this.RaisePropertyChanged("WarehouseTotal");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CodeTableServiceReference.ICodeTableService")]
    public interface ICodeTableService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICodeTableService/CodeTableSearch", ReplyAction="http://tempuri.org/ICodeTableService/CodeTableSearchResponse")]
        ILPathways.CodeTableServiceReference.CodeSearchResponse CodeTableSearch(ILPathways.CodeTableServiceReference.CodeSearchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICodeTableService/CodeTableSearch", ReplyAction="http://tempuri.org/ICodeTableService/CodeTableSearchResponse")]
        System.IAsyncResult BeginCodeTableSearch(ILPathways.CodeTableServiceReference.CodeSearchRequest request, System.AsyncCallback callback, object asyncState);
        
        ILPathways.CodeTableServiceReference.CodeSearchResponse EndCodeTableSearch(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICodeTableServiceChannel : ILPathways.CodeTableServiceReference.ICodeTableService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CodeTableSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CodeTableSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ILPathways.CodeTableServiceReference.CodeSearchResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ILPathways.CodeTableServiceReference.CodeSearchResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CodeTableServiceClient : System.ServiceModel.ClientBase<ILPathways.CodeTableServiceReference.ICodeTableService>, ILPathways.CodeTableServiceReference.ICodeTableService {
        
        private BeginOperationDelegate onBeginCodeTableSearchDelegate;
        
        private EndOperationDelegate onEndCodeTableSearchDelegate;
        
        private System.Threading.SendOrPostCallback onCodeTableSearchCompletedDelegate;
        
        public CodeTableServiceClient() {
        }
        
        public CodeTableServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CodeTableServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CodeTableServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CodeTableServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<CodeTableSearchCompletedEventArgs> CodeTableSearchCompleted;
        
        public ILPathways.CodeTableServiceReference.CodeSearchResponse CodeTableSearch(ILPathways.CodeTableServiceReference.CodeSearchRequest request) {
            return base.Channel.CodeTableSearch(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCodeTableSearch(ILPathways.CodeTableServiceReference.CodeSearchRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCodeTableSearch(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ILPathways.CodeTableServiceReference.CodeSearchResponse EndCodeTableSearch(System.IAsyncResult result) {
            return base.Channel.EndCodeTableSearch(result);
        }
        
        private System.IAsyncResult OnBeginCodeTableSearch(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ILPathways.CodeTableServiceReference.CodeSearchRequest request = ((ILPathways.CodeTableServiceReference.CodeSearchRequest)(inValues[0]));
            return this.BeginCodeTableSearch(request, callback, asyncState);
        }
        
        private object[] OnEndCodeTableSearch(System.IAsyncResult result) {
            ILPathways.CodeTableServiceReference.CodeSearchResponse retVal = this.EndCodeTableSearch(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCodeTableSearchCompleted(object state) {
            if ((this.CodeTableSearchCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CodeTableSearchCompleted(this, new CodeTableSearchCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CodeTableSearchAsync(ILPathways.CodeTableServiceReference.CodeSearchRequest request) {
            this.CodeTableSearchAsync(request, null);
        }
        
        public void CodeTableSearchAsync(ILPathways.CodeTableServiceReference.CodeSearchRequest request, object userState) {
            if ((this.onBeginCodeTableSearchDelegate == null)) {
                this.onBeginCodeTableSearchDelegate = new BeginOperationDelegate(this.OnBeginCodeTableSearch);
            }
            if ((this.onEndCodeTableSearchDelegate == null)) {
                this.onEndCodeTableSearchDelegate = new EndOperationDelegate(this.OnEndCodeTableSearch);
            }
            if ((this.onCodeTableSearchCompletedDelegate == null)) {
                this.onCodeTableSearchCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCodeTableSearchCompleted);
            }
            base.InvokeAsync(this.onBeginCodeTableSearchDelegate, new object[] {
                        request}, this.onEndCodeTableSearchDelegate, this.onCodeTableSearchCompletedDelegate, userState);
        }
    }
}
